// Написаны тесты, проверяющие следующую функциональность:
    // Добавление ингредиента из списка ингредиентов в конструктор.
    // Открытие и закрытие модального окна с описанием ингредиента.
    // Отображение в открытом модальном окне данных именно того ингредиента, по которому произошел клик.
    // Процесс создания заказа: добавление ингредиентов в конструктор бургера, проверка отображения модального
    // окна с верным номером заказа при клике на кнопку оформления заказа. Проверка очистки конструктора бургера
    // от добавленных ингредиентов.
// +++ В папке cypress/fixtures созданы файлы с данными ответов на запросы, которые используются для подмены запросов к реальному бэкенду.
// +++ Настроен перехват с помощью cy.intercept всех запросов к бэкенду, выполняемых во время запуска тестов.
// +++ Перед выполнением теста создания заказа в localStorage и сookie подставляются фейковые токены авторизации,
// +++ а после завершения теста они очищаются.

describe('Добавление ингредиента из списка ингредиентов в конструктор', () => {

    beforeEach(() => {
        // Используем данные из fixures для mock-запросов
        cy.intercept('GET', 'api/ingredients', { fixture: 'ingredients.json' });
        cy.intercept('POST', 'api/orders', { fixture: 'postOrder.json' });

        // Разрешение отображения в cypress
        cy.viewport(1400, 1200)

        // Подставляются фейковые токены авторизации
        localStorage.setItem('refreshToken', 'testRefreshToken');
        cy.setCookie('accessToken', 'testAccessToken');
        cy.visit('http://localhost:4000/');
    });

    // После завершения тестов токены авторизации очищаются 
    afterEach(() => {
        localStorage.removeItem('refreshToken');
        cy.clearCookie('accessToken');
    });

    it('add ingredient', () => {
        cy.get('[data-cy=burger-ingredient]').contains('Добавить').click();
    });

    
}); 